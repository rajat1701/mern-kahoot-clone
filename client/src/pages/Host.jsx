import React, { useEffect, useState } from "react";
import API, { setAuthToken } from "../api";
import { useNavigate } from "react-router-dom";
import { useSocket } from "../components/useSocket";

export default function Host() {
  const nav = useNavigate();
  const socket = useSocket();
  const [auth, setAuth] = useState({ email: "", password: "", name: "" });
  const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem("token"));
  const [quizzes, setQuizzes] = useState([]);
  const [form, setForm] = useState({
    title: "Sample Quiz",
    description: "Autogenerated demo",
    questions: [
      { text: "2 + 2 = ?", choices: ["3","4","22","2"], correctIndex: 1, timeLimitSec: 15 },
      { text: "Capital of France?", choices: ["Paris","Rome","Berlin","Madrid"], correctIndex: 0, timeLimitSec: 15 }
    ]
  });

  useEffect(() => {
    if (loggedIn) API.get("/quizzes/mine").then(r => setQuizzes(r.data));
  }, [loggedIn]);

  async function register() {
    await API.post("/auth/register", { name: auth.name || "Host", email: auth.email, password: auth.password });
    await login();
  }
  async function login() {
    const res = await API.post("/auth/login", { email: auth.email, password: auth.password });
    setAuthToken(res.data.token);
    setLoggedIn(true);
    const mine = await API.get("/quizzes/mine");
    setQuizzes(mine.data);
  }
  async function createQuiz() {
    const res = await API.post("/quizzes", form);
    setQuizzes([res.data, ...quizzes]);
  }
  function hostQuiz(quiz) {
    socket.emit("host:create_room", { quiz });
    socket.once("host:room_created", ({ roomCode }) => {
      nav(`/host/${roomCode}`);
    });
  }

  if (!loggedIn) {
    return (
      <div>
        <h2>Login or Register</h2>
        <input placeholder="name" onChange={e=>setAuth(a=>({...a, name:e.target.value}))} />
        <input placeholder="email" onChange={e=>setAuth(a=>({...a, email:e.target.value}))} />
        <input placeholder="password" type="password" onChange={e=>setAuth(a=>({...a, password:e.target.value}))} />
        <div style={{ display:"flex", gap:8 }}>
          <button onClick={login}>Login</button>
          <button onClick={register}>Register</button>
        </div>
      </div>
    )
  }

  return (
    <div>
      <h2>Create Quiz</h2>
      <button onClick={createQuiz}>Save Sample Quiz</button>
      <h3>Your Quizzes</h3>
      <ul>
        {quizzes.map(q => (
          <li key={q._id} style={{ display: "flex", gap: 8, alignItems: "center" }}>
            <b>{q.title}</b>
            <button onClick={()=>hostQuiz(q)}>Host</button>
          </li>
        ))}
      </ul>

      <h3>Sample Editor (inline JSON)</h3>
      <textarea
        value={JSON.stringify(form, null, 2)}
        onChange={e=>setForm(JSON.parse(e.target.value))}
        rows={12}
        style={{ width: "100%" }}
      />
    </div>
  )
}
